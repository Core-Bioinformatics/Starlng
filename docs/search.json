[{"path":"https://core-bioinformatics.github.io/Starlng/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Starlng authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/articles/Starlng.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"Applying Starlng on single-cell data","text":"","code":"sessionInfo() #> R version 4.5.1 (2025-06-13) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: Europe/Bucharest #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] pbmc3k.SeuratData_3.1.4 SeuratData_0.2.2.9002   Seurat_5.3.0            #> [4] SeuratObject_5.2.0      sp_2.2-0                Starlng_1.0.0           #>  #> loaded via a namespace (and not attached): #>   [1] deldir_2.0-4           pbapply_1.7-4          gridExtra_2.3          #>   [4] rlang_1.1.6            magrittr_2.0.4         RcppAnnoy_0.0.22       #>   [7] spatstat.geom_3.6-0    matrixStats_1.5.0      ggridges_0.5.7         #>  [10] compiler_4.5.1         png_0.1-8              systemfonts_1.3.1      #>  [13] vctrs_0.6.5            reshape2_1.4.4         stringr_1.5.2          #>  [16] crayon_1.5.3           pkgconfig_2.0.3        fastmap_1.2.0          #>  [19] promises_1.3.3         rmarkdown_2.30         ragg_1.5.0             #>  [22] purrr_1.1.0            xfun_0.53              cachem_1.1.0           #>  [25] jsonlite_2.0.0         goftest_1.2-3          later_1.4.4            #>  [28] spatstat.utils_3.2-0   irlba_2.3.5.1          parallel_4.5.1         #>  [31] cluster_2.1.8.1        R6_2.6.1               ica_1.0-3              #>  [34] spatstat.data_3.1-9    stringi_1.8.7          bslib_0.9.0            #>  [37] RColorBrewer_1.1-3     reticulate_1.43.0      spatstat.univar_3.1-4  #>  [40] parallelly_1.45.1      lmtest_0.9-40          jquerylib_0.1.4        #>  [43] scattermore_1.2        Rcpp_1.1.0             iterators_1.0.14       #>  [46] knitr_1.50             tensor_1.5.1           future.apply_1.20.0    #>  [49] zoo_1.8-14             sctransform_0.4.2      httpuv_1.6.16          #>  [52] Matrix_1.7-4           splines_4.5.1          igraph_2.2.0           #>  [55] tidyselect_1.2.1       abind_1.4-8            yaml_2.3.10            #>  [58] spatstat.random_3.4-2  spatstat.explore_3.5-3 codetools_0.2-19       #>  [61] miniUI_0.1.2           listenv_0.9.1          lattice_0.22-5         #>  [64] tibble_3.3.0           plyr_1.8.9             shiny_1.11.1           #>  [67] S7_0.2.0               ROCR_1.0-11            evaluate_1.0.5         #>  [70] Rtsne_0.17             future_1.67.0          fastDummies_1.7.5      #>  [73] desc_1.4.3             survival_3.8-3         polyclip_1.10-7        #>  [76] fitdistrplus_1.2-4     pillar_1.11.1          KernSmooth_2.23-26     #>  [79] foreach_1.5.2          plotly_4.11.0          generics_0.1.4         #>  [82] RcppHNSW_0.6.0         ggplot2_4.0.0          scales_1.4.0           #>  [85] globals_0.18.0         xtable_1.8-4           glue_1.8.0             #>  [88] lazyeval_0.2.2         tools_4.5.1            data.table_1.17.8      #>  [91] RSpectra_0.16-2        RANN_2.6.2             fs_1.6.6               #>  [94] dotCall64_1.2          cowplot_1.2.0          grid_4.5.1             #>  [97] tidyr_1.3.1            nlme_3.1-168           patchwork_1.3.2        #> [100] cli_3.6.5              rappdirs_0.3.3         spatstat.sparse_3.1-0  #> [103] textshaping_1.0.4      spam_2.11-1            viridisLite_0.4.2      #> [106] dplyr_1.1.4            uwot_0.2.3             gtable_0.3.6           #> [109] sass_0.4.10            digest_0.6.37          progressr_0.17.0       #> [112] ggrepel_0.9.6          htmlwidgets_1.6.4      farver_2.1.2           #> [115] htmltools_0.5.8.1      pkgdown_2.1.3          lifecycle_1.0.4        #> [118] httr_1.4.7             mime_0.13              MASS_7.3-65"},{"path":"https://core-bioinformatics.github.io/Starlng/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andi Munteanu. Author, maintainer.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Munteanu (2025). Starlng: STability Analysis coReguLated Nests Genes. R package version 1.0.0, https://github.com/Core-Bioinformatics/Starlng.","code":"@Manual{,   title = {Starlng: STability Analysis of coReguLated Nests of Genes},   author = {Andi Munteanu},   year = {2025},   note = {R package version 1.0.0},   url = {https://github.com/Core-Bioinformatics/Starlng}, }"},{"path":"https://core-bioinformatics.github.io/Starlng/index.html","id":"starlng-stability-analysis-of-coregulated-nests-of-genes","dir":"","previous_headings":"","what":"STability Analysis of coReguLated Nests of Genes","title":"STability Analysis of coReguLated Nests of Genes","text":"repository contains Starlng R package, identifies stable clusters coexpressed genes describes position along pseudotime trajectory. package builds top Monocle3 [1] ClustAssess [2] frameworks.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"STability Analysis of coReguLated Nests of Genes","text":"Github using remotes package: remotes::install_github(\"Core-Bioinformatics/Starlng\"). following packages required Starlng: circlize ClustAssess ComplexHeatmap dplyr DT foreach ggplot2 Gmedian gprofiler2 HDF5Array igraph leidenbase Matrix (>= 1.5.0) methods monocle3 patchwork qs qs2 qualpalr RANN rclipboard reshape2 RhpcBLASctl rhdf5 shiny shinyjs shinyWidgets spsComps tidyr stringr viridis suggest installing following packages optimal performance: * doFuture * doParallel * irlba * testthat (>= 3.0.0) * parallel * plotly * SharedObject","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/index.html","id":"citing-starlng","dir":"","previous_headings":"","what":"Citing Starlng","title":"STability Analysis of coReguLated Nests of Genes","text":"added.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"STability Analysis of coReguLated Nests of Genes","text":"[1] J. Cao, M. Spielmann, X. Qiu, X. Huang, D. M. Ibrahim, . J. Hill, F. Zhang, S. Mundlos, L. Christiansen, F. J. Steemers, C. Trapnell, J. Shendure, “single-cell transcriptional landscape mammalian organogenesis,” Nature, vol. 566, p. 496–502, Feb. 2019. [2] . Shahsavari, . Munteanu, . Mohorianu, “Clustassess: tools assessing robustness single-cell clustering,” bioRxiv, 2022.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/clustering_pipeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Community detection pipeline — clustering_pipeline","title":"Community detection pipeline — clustering_pipeline","text":"function applies PhenoGraph pipeline given embedding matrix. pipeline creates exact nearest-neighbour graph using RANN package, applies Leiden algorithm find clusters. pipeline can run multiple times changing random seed, ensure robustness resulting clusters.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/clustering_pipeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Community detection pipeline — clustering_pipeline","text":"","code":"clustering_pipeline(   embedding,   n_neighbours = seq(from = 5, to = 50, by = 5),   graph_type = \"snn\",   prune_value = -1,   resolutions = list(RBConfigurationVertexPartition = seq(from = 0.1, to = 2, by = 0.1),     RBERVertexPartition = NULL, ModularityVertexPartition = NULL),   number_iterations = 5,   seeds = NULL,   number_repetitions = 100,   merge_identical_partitions = TRUE,   memory_log_file = NULL )"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/clustering_pipeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Community detection pipeline — clustering_pipeline","text":"embedding embedding matrix row represents point column dimension. n_neighbours vector integers representing number number neighbours used build adjacency graph. graph_type type graph. Can either \"nn\" - directed unweighted graph \"snn\" - undirected weighted graph, weights calculated using JSI score. prune_value value used prune edges graph. value negative, function determine highest pruning value keep graph connected. Defaults -1. resolutions list vectors representing resolution parameters used community detection algorithm. name list associated quality function. values list resolution parameters used. available choices terms quality functions \"RBConfigurationVertexPartition\", \"RBERVertexPartition\" \"ModularityVertexPartition\". number_iterations many iterations Leiden algorithm run. Defaults 5. seeds vector integers representing random seeds used community detection algorithm. NULL, function generate seeds based number repetitions. Defaults NULL. number_repetitions number repetitions community detection pipeline run. Defaults 100. merge_identical_partitions Logical indicating function merge partitions identical group number clusters. Defaults TRUE. memory_log_file path file memory usage function logged. Defaults NULL.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/clustering_pipeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Community detection pipeline — clustering_pipeline","text":"list lists containing clusters found combination number neighbours quality functions. merge_identical_partitions set TRUE, last level contain partitions grouped number clusters, alongside overall Element-Centric Consistency (ECC) score.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/community_detection_master.html","id":null,"dir":"Reference","previous_headings":"","what":"Community detection wrapper — community_detection_master","title":"Community detection wrapper — community_detection_master","text":"function simplified version clustering_pipeline. starts already-generated adjacency matrix applied leiden algorithm identify clusters. details algorithm run clustering_pipeline function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/community_detection_master.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Community detection wrapper — community_detection_master","text":"","code":"community_detection_master(   adj_object,   resolutions,   number_iterations,   seeds,   graph_type = \"snn\",   memory_log_file = NULL )"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/community_detection_master.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Community detection wrapper — community_detection_master","text":"adj_object adjacency matrix used. matrix square defined rownames. resolutions Check clustering_pipeline documentation. number_iterations Check clustering_pipeline documentation. seeds Check clustering_pipeline documentation. graph_type Check clustering_pipeline documentation. memory_log_file Check clustering_pipeline documentation.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/community_detection_master.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Community detection wrapper — community_detection_master","text":"list lists containing clusters found combination number neighbours quality functions.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/custom_learn_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Learn the graph of the Monocle object — custom_learn_graph","title":"Learn the graph of the Monocle object — custom_learn_graph","text":"function follows logic learn_graph function monocle3 package. main difference consists providing flexibility user, number nodes per log10 cells metadata used partition.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/custom_learn_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Learn the graph of the Monocle object — custom_learn_graph","text":"","code":"custom_learn_graph(   mon_obj,   nodes_per_log10_cells = 30,   learn_graph_controls = list(eps = 1e-05, maxiter = 100),   use_partition = FALSE,   use_closed_loops = FALSE,   verbose = FALSE,   metadata_for_nodes = NULL )"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/custom_learn_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Learn the graph of the Monocle object — custom_learn_graph","text":"mon_obj Monocle object. nodes_per_log10_cells number trajectory nodes created per log10 cells. Defaults 30. learn_graph_controls list control parameters, defined learn_graph function Monocle. Defaults list(eps = 1e-5, maxiter = 100). use_partition logical value indicating partition used learning graph. Defaults FALSE. use_closed_loops logical value indicating circular paths can formed trajectory graph. Defaults FALSE. verbose Parameter passed learn_graph function prints progress. metadata_for_nodes metadata column used update partition Monocle object. used use_partition set TRUE. Defaults NULL, meaning partition updated.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/custom_learn_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Learn the graph of the Monocle object — custom_learn_graph","text":"Monocle object learned graph.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/custom_pseudotime_ordering.html","id":null,"dir":"Reference","previous_headings":"","what":"Order the cells by pseudotime — custom_pseudotime_ordering","title":"Order the cells by pseudotime — custom_pseudotime_ordering","text":"function follows logic order_cells function monocle3 package. main difference consists allowing user define start end points trajectory. case, monocle object subsetted.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/custom_pseudotime_ordering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order the cells by pseudotime — custom_pseudotime_ordering","text":"","code":"custom_pseudotime_ordering(   monocle_object,   start_cells = NULL,   end_cells = NULL )"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/custom_pseudotime_ordering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order the cells by pseudotime — custom_pseudotime_ordering","text":"monocle_object monocle object. start_cells list cells names define start ordering. NULL, end_cells must provided. Defaults NULL. end_cells list cells names define end ordering. NULL, start_cells must provided. end_cells NULL start_cells NULL, subsetting performed. end_cells NULL start_cells NULL, ordering reversed. Defaults NULL.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/custom_pseudotime_ordering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Order the cells by pseudotime — custom_pseudotime_ordering","text":"named vector pseudotime values. case subsetting, cells part inferred subtrajectory assigned NA value.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/diet_monocle_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Diet Monocle object — diet_monocle_object","title":"Diet Monocle object — diet_monocle_object","text":"function simplifies structure Monocle object. purpose create lightweight object can used context Shiny application. resulting object contain needed information perform pseudotime ordering. THerefore, function removes information : expression matrices, auxiliary data related dimensionality reduction clustering metadata columns.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/diet_monocle_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diet Monocle object — diet_monocle_object","text":"","code":"diet_monocle_object(mon_obj)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/diet_monocle_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diet Monocle object — diet_monocle_object","text":"mon_obj Monocle object.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/diet_monocle_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diet Monocle object — diet_monocle_object","text":"Diet Monocle object.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/filter_central_cells_from_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Find central points of a group — filter_central_cells_from_group","title":"Find central points of a group — filter_central_cells_from_group","text":"Given population cells UMAP embedding, function attempts identify group cells located centre group. , function calculates geometric median UMAP calculates nearest points point.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/filter_central_cells_from_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find central points of a group — filter_central_cells_from_group","text":"","code":"filter_central_cells_from_group(cell_group, umap_embedding, n_points = 5)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/filter_central_cells_from_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find central points of a group — filter_central_cells_from_group","text":"cell_group vector names cells analysed. umap_embedding matrix UMAP embedding cells. matrix defined rownames cell names. n_points number points selected central points.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/filter_central_cells_from_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find central points of a group — filter_central_cells_from_group","text":"vector names cells considered central.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/get_clusters_consistency.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the by-cluster consistency of configurations — get_clusters_consistency","title":"Get the by-cluster consistency of configurations — get_clusters_consistency","text":"function calculates Element-Centric Consistency (ECC) partitions grouped number clusters.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/get_clusters_consistency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the by-cluster consistency of configurations — get_clusters_consistency","text":"","code":"get_clusters_consistency(by_cluster_list, order_logic = \"avg_agreement\")"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/get_clusters_consistency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the by-cluster consistency of configurations — get_clusters_consistency","text":"by_cluster_list nested list partitions grouped number clusters. order_logic Determines order partitions associated number clusters. Can either frequency (frequent first) agreement (partition similar others, first). Defaults \"agreement\".","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/get_clusters_consistency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the by-cluster consistency of configurations — get_clusters_consistency","text":"nested list partitions ordered agreement / frequency overall ECC value.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/get_feature_loading.html","id":null,"dir":"Reference","previous_headings":"","what":"Get feature loading from an expression matrix — get_feature_loading","title":"Get feature loading from an expression matrix — get_feature_loading","text":"function calculates feature loading expression matrix using PCA.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/get_feature_loading.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get feature loading from an expression matrix — get_feature_loading","text":"","code":"get_feature_loading(expr_matrix, npcs = 30, approx = FALSE, ...)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/get_feature_loading.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get feature loading from an expression matrix — get_feature_loading","text":"expr_matrix gene cell expression matrix used. expected matrix already normalized scaled. npcs number principal components used. Defaults 30. approx Logical indicating deterministic PCA (prcomp) approximate PCA (irlba) used. Defaults FALSE. ... Aditional parameters passed PCA function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/get_feature_loading.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get feature loading from an expression matrix — get_feature_loading","text":"gene npcs matrix containing feature loading.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/get_pseudotime_recommendation.html","id":null,"dir":"Reference","previous_headings":"","what":"Recommend a pseudotime ordering — get_pseudotime_recommendation","title":"Recommend a pseudotime ordering — get_pseudotime_recommendation","text":"function provides recommendation pseudotime ordering based metadata available monocle object. recommendation done selecting subgroup metadata column leads highest interquartile range pseudotime values (criteria user provides). translated ordering highest variability.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/get_pseudotime_recommendation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recommend a pseudotime ordering — get_pseudotime_recommendation","text":"","code":"get_pseudotime_recommendation(   monocle_object,   recommendation_criteria = function(pseudotime_values) {      max(pseudotime_values) -     min(pseudotime_values)  } )"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/get_pseudotime_recommendation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recommend a pseudotime ordering — get_pseudotime_recommendation","text":"monocle_object monocle object. recommendation_criteria function defines criteria determining best pseudotime ordering. function take pseudotime values input return numeric value. function monotonically increasing. Defaults function returns interquartile range.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/get_pseudotime_recommendation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recommend a pseudotime ordering — get_pseudotime_recommendation","text":"list contains recommended metadata column, subgroup pseudotime values.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/group_by_clusters_general.html","id":null,"dir":"Reference","previous_headings":"","what":"Group the partitions by the number of clusters — group_by_clusters_general","title":"Group the partitions by the number of clusters — group_by_clusters_general","text":"function groups partitions number clusters. grouping can done level nested list keeping hierarchy parameters.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/group_by_clusters_general.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group the partitions by the number of clusters — group_by_clusters_general","text":"","code":"group_by_clusters_general(clustering_list, start_level = 1)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/group_by_clusters_general.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group the partitions by the number of clusters — group_by_clusters_general","text":"clustering_list nested list partitions. level associated values specific parameters. last level contains partitions. start_level level grouping start. default 1.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/group_by_clusters_general.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group the partitions by the number of clusters — group_by_clusters_general","text":"nested list partitions grouped number clusters.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/parallel_nn2_idx.html","id":null,"dir":"Reference","previous_headings":"","what":"Parallel NN indexing — parallel_nn2_idx","title":"Parallel NN indexing — parallel_nn2_idx","text":"function provides parallel approach finding nearest neighbours points given embedding. parallelisation done splitting data chunks running RANN::nn2 function chunk parallel.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/parallel_nn2_idx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parallel NN indexing — parallel_nn2_idx","text":"","code":"parallel_nn2_idx(embedding, k)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/parallel_nn2_idx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parallel NN indexing — parallel_nn2_idx","text":"embedding embedding matrix row represents point column dimension. k number nearest neighbours found.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/parallel_nn2_idx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parallel NN indexing — parallel_nn2_idx","text":"matrix row contains indices k-nearest neighbours corresponding point.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/pca_reduction.html","id":null,"dir":"Reference","previous_headings":"","what":"Get PCA reduction from an expression matrix — pca_reduction","title":"Get PCA reduction from an expression matrix — pca_reduction","text":"function calculates PCA embedding expression matrix.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/pca_reduction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get PCA reduction from an expression matrix — pca_reduction","text":"","code":"pca_reduction(expr_matrix, npcs = 30, approx = FALSE, ...)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/pca_reduction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get PCA reduction from an expression matrix — pca_reduction","text":"expr_matrix gene cell expression matrix used. expected matrix already normalized scaled. npcs number principal components used. Defaults 30. approx Logical indicating deterministic PCA (prcomp) approximate PCA (irlba) used. Defaults FALSE. ... Aditional parameters passed PCA function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/pca_reduction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get PCA reduction from an expression matrix — pca_reduction","text":"gene npcs matrix containing PCA embedding.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/pca_reduction.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get PCA reduction from an expression matrix — pca_reduction","text":"PCA applied context genes, cells.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/prepare_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Server - Prepare Session — prepare_session","title":"Server - Prepare Session — prepare_session","text":"Creates backend interface initializes variables environment used inside Starlng Shiny application.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/prepare_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server - Prepare Session — prepare_session","text":"","code":"prepare_session(   parent_session,   reactive_dim,   height_ratio = 0.7,   enrichment_organism = \"hsapiens\" )"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/prepare_session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server - Prepare Session — prepare_session","text":"parent_session object linking Shiny session parent container. reactive_dim reactive variable returns dimensions browser window. reactive variable used update dimensions plots inside Shiny app. height_ratio Variable indicating ratio height plots height browser window. enrichment_organism organism used gene enrichment analysis. Defaults \"hsapiens\" (human). list supported organisms, please consult gprofiler2 package documentation.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/prepare_session.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Server - Prepare Session — prepare_session","text":"function shiny module function used context app created using starlng_write_app function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/read_gene_from_dense_h5.html","id":null,"dir":"Reference","previous_headings":"","what":"Read expression matrix from a dense HDF5 file — read_gene_from_dense_h5","title":"Read expression matrix from a dense HDF5 file — read_gene_from_dense_h5","text":"function read specific rows, associated genes, dense matrix stored HDF5 file.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/read_gene_from_dense_h5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read expression matrix from a dense HDF5 file — read_gene_from_dense_h5","text":"","code":"read_gene_from_dense_h5(   gene_names,   matrix_h5_path,   index_genes = NULL,   check_intersect = TRUE,   add_rownames = FALSE )"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/read_gene_from_dense_h5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read expression matrix from a dense HDF5 file — read_gene_from_dense_h5","text":"gene_names List names genes read. matrix_h5_path Path HDF5 file expression matrix stored. file must contain following fields: genes: names genes matrix. cells: names cells matrix. expression_matrix: expression matrix index_genes Named vector names genes values index row associated gene. NULL, function calculate automatically index. Defaults NULL. check_intersect Logical indicating function check provided genes present matrix. Defaults TRUE. add_rownames Logical indicating function add cell names column names extracted matrix. Defaults FALSE.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/read_gene_from_dense_h5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read expression matrix from a dense HDF5 file — read_gene_from_dense_h5","text":"expression matrix requested genes rows.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/remove_outlier_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove outlier cells from a group — remove_outlier_cells","title":"Remove outlier cells from a group — remove_outlier_cells","text":"function removes outlier cells group based distance patterns, observed UMAP embedding. function considers point outlier distance geometric median group given threshold determined quantile.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/remove_outlier_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove outlier cells from a group — remove_outlier_cells","text":"","code":"remove_outlier_cells(   cell_names,   umap_emb,   percentile_threshold = 0.75,   gmedian_point = NULL )"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/remove_outlier_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove outlier cells from a group — remove_outlier_cells","text":"cell_names vector names cells defining group. umap_emb matrix UMAP embedding cells. matrix defined rownames cell names. percentile_threshold percentile used threshold distance geometric median. value used calculate quantile. Defaults 0.75. gmedian_point geometric median point group. NULL, function calculate point. Defaults NULL.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/remove_outlier_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove outlier cells from a group — remove_outlier_cells","text":"vector names cells considered outliers.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/select_best_configuration.html","id":null,"dir":"Reference","previous_headings":"","what":"Select the most stable configurations of parameters — select_best_configuration","title":"Select the most stable configurations of parameters — select_best_configuration","text":"function selects stable configuration parameters using overall ECC value. Firstly, ranks configurations based median keep upper half. applies second ranking based IQR selects configuration lowest IQR. user can defined functions, long monotonicity two functions mentioned .","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/select_best_configuration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select the most stable configurations of parameters — select_best_configuration","text":"","code":"select_best_configuration(   grouped_by_k_list,   sep_char = \";\",   first_ranking_function = stats::median,   second_ranking_function = function(x) {      stats::quantile(x, 0.75) -     stats::quantile(x, 0.25)  } )"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/select_best_configuration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select the most stable configurations of parameters — select_best_configuration","text":"grouped_by_k_list nested list configurations, last level contains list partitions grouped number clusters. sep_char character used separate configuration names. first_ranking_function function used rank configurations eliminate lower half. default median. second_ranking_function function used rank configurations select stable one. default IQR.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/select_best_configuration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select the most stable configurations of parameters — select_best_configuration","text":"list parameters associated stable configuration.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/select_cells_by_gene_expr.html","id":null,"dir":"Reference","previous_headings":"","what":"Select cells by gene expression — select_cells_by_gene_expr","title":"Select cells by gene expression — select_cells_by_gene_expr","text":"function filters dataset group cells expressing set genes given threshold. , voting scheme applied.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/select_cells_by_gene_expr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select cells by gene expression — select_cells_by_gene_expr","text":"","code":"select_cells_by_gene_expr(   expression_matrix,   genes,   thresh_percentile = 0.25,   thresh_value = 0,   n_coexpressed_thresh = length(genes) )"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/select_cells_by_gene_expr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select cells by gene expression — select_cells_by_gene_expr","text":"expression_matrix gene cell expression matrix used. genes vector names genes used filtering. thresh_percentile percentile used threshold expression values select cells associated gene. set 0, threshold value defined thresh_value. Defaults 0.25. thresh_value value used threshold expression values select cells associated gene. Defaults 0. n_coexpressed_thresh number genes coexpressed cell considered selected. Defaults number provided genes.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/select_cells_by_gene_expr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select cells by gene expression — select_cells_by_gene_expr","text":"list cells selected using voting scheme.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/select_cells_by_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Select cells by metadata — select_cells_by_metadata","title":"Select cells by metadata — select_cells_by_metadata","text":"function filters dataset group cells defined combination filters determined multiple metadata.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/select_cells_by_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select cells by metadata — select_cells_by_metadata","text":"","code":"select_cells_by_metadata(metadata_df, metadata_combinations)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/select_cells_by_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select cells by metadata — select_cells_by_metadata","text":"metadata_df dataframe metadata information. rows dataframe cells columns metadata information. metadata_combinations list metadata columns unique groups metadata used filter cells. names list columns metadata_df.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/select_cells_by_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select cells by metadata — select_cells_by_metadata","text":"list cells defined intersection provided groups.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_gene_clustering.html","id":null,"dir":"Reference","previous_headings":"","what":"Server - Gene clustering — server_gene_clustering","title":"Server - Gene clustering — server_gene_clustering","text":"Creates backend interface Gene Clustering panel inside Starlng Shiny application.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_gene_clustering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server - Gene clustering — server_gene_clustering","text":"","code":"server_gene_clustering(id, filtered_genes)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_gene_clustering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server - Gene clustering — server_gene_clustering","text":"id id shiny module, used access UI elements. filtered_genes reactive expression contains filtered genes used clustering.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_gene_clustering.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Server - Gene clustering — server_gene_clustering","text":"function shiny module function used context app created using starlng_write_app function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_gene_info_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Server - Gene Info Table — server_gene_info_table","title":"Server - Gene Info Table — server_gene_info_table","text":"Creates backend interface Gene Info Tabel panel inside Starlng Shiny application.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_gene_info_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server - Gene Info Table — server_gene_info_table","text":"","code":"server_gene_info_table(id)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_gene_info_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server - Gene Info Table — server_gene_info_table","text":"id id shiny module, used access UI elements.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_gene_info_table.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Server - Gene Info Table — server_gene_info_table","text":"function shiny module function used context app created using starlng_write_app function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_gene_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Server - Gene UMAP — server_gene_umap","title":"Server - Gene UMAP — server_gene_umap","text":"Creates backend interface Gene UMAP panel inside Starlng Shiny application.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_gene_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server - Gene UMAP — server_gene_umap","text":"","code":"server_gene_umap(id)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_gene_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server - Gene UMAP — server_gene_umap","text":"id id shiny module, used access UI elements.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_gene_umap.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Server - Gene UMAP — server_gene_umap","text":"function shiny module function used context app created using starlng_write_app function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_metadata_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Server - Metadata UMAP — server_metadata_umap","title":"Server - Metadata UMAP — server_metadata_umap","text":"Creates backend interface Metadata UMAP panel inside Starlng Shiny application.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_metadata_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server - Metadata UMAP — server_metadata_umap","text":"","code":"server_metadata_umap(id)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_metadata_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server - Metadata UMAP — server_metadata_umap","text":"id id shiny module, used access UI elements.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_metadata_umap.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Server - Metadata UMAP — server_metadata_umap","text":"function shiny module function used context app created using starlng_write_app function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_module_enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Server - Module Enrichment — server_module_enrichment","title":"Server - Module Enrichment — server_module_enrichment","text":"Creates backend interface Module Enrichment panel inside Starlng Shiny application.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_module_enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server - Module Enrichment — server_module_enrichment","text":"","code":"server_module_enrichment(id)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_module_enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server - Module Enrichment — server_module_enrichment","text":"id id shiny module, used access UI elements.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_module_enrichment.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Server - Module Enrichment — server_module_enrichment","text":"function shiny module function used context app created using starlng_write_app function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_module_metadata_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Server - Gene Module Heatmap — server_module_metadata_heatmap","title":"Server - Gene Module Heatmap — server_module_metadata_heatmap","text":"Creates backend interface Gene Module Heatmap panel inside Starlng Shiny application.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_module_metadata_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server - Gene Module Heatmap — server_module_metadata_heatmap","text":"","code":"server_module_metadata_heatmap(id)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_module_metadata_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server - Gene Module Heatmap — server_module_metadata_heatmap","text":"id id shiny module, used access UI elements.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_module_metadata_heatmap.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Server - Gene Module Heatmap — server_module_metadata_heatmap","text":"function shiny module function used context app created using starlng_write_app function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_module_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Server - Gene Module UMAP — server_module_umap","title":"Server - Gene Module UMAP — server_module_umap","text":"Creates backend interface Gene Module UMAP panel inside Starlng Shiny application.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_module_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server - Gene Module UMAP — server_module_umap","text":"","code":"server_module_umap(id)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_module_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server - Gene Module UMAP — server_module_umap","text":"id id shiny module, used access UI elements.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_module_umap.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Server - Gene Module UMAP — server_module_umap","text":"function shiny module function used context app created using starlng_write_app function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_pseudotime_select_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Server - Pseudotime — server_pseudotime_select_cells","title":"Server - Pseudotime — server_pseudotime_select_cells","text":"Creates backend interface Pseudotime panel inside Starlng Shiny application.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_pseudotime_select_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server - Pseudotime — server_pseudotime_select_cells","text":"","code":"server_pseudotime_select_cells(id)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_pseudotime_select_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server - Pseudotime — server_pseudotime_select_cells","text":"id id shiny module, used access UI elements.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/server_pseudotime_select_cells.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Server - Pseudotime — server_pseudotime_select_cells","text":"function shiny module function used context app created using starlng_write_app function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/sort_genes_by_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort genes by metadata information — sort_genes_by_metadata","title":"Sort genes by metadata information — sort_genes_by_metadata","text":"function sorts genes expression matrix based summary performed population cells. gene, population selected cells expressing gene given threshold. summary calculated metadata information obtained population.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/sort_genes_by_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort genes by metadata information — sort_genes_by_metadata","text":"","code":"sort_genes_by_metadata(   expression_matrix,   metadata_info,   summary_function = mean,   thresh_percentile = 0.25,   thresh_value = 0,   decreasing = FALSE )"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/sort_genes_by_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sort genes by metadata information — sort_genes_by_metadata","text":"expression_matrix gene cell expression matrix used. metadata_info metadata information used sorting. metadata numeric vector. summary_function function takes argument numeric vector summarises single value. Defaults mean. thresh_percentile percentile used threshold expression values select cells associated gene. set 0, threshold value defined thresh_value. Defaults 0.25. thresh_value value used threshold expression values select cells associated gene. Defaults 0. decreasing Logical indicating genes sorted decreasing increasing order. Defaults FALSE.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/sort_genes_by_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sort genes by metadata information — sort_genes_by_metadata","text":"vector indices genes sorted metadata summaries.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/starlng_write_app_clustassess.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Starlng Shiny app from a ClustAssess object — starlng_write_app_clustassess","title":"Create Starlng Shiny app from a ClustAssess object — starlng_write_app_clustassess","text":"Runs entire Starlng pipeline normalized gene expression matrix togheter output ClustAssess automatic pipeline generates folder necessary files run Shiny app.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/starlng_write_app_clustassess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Starlng Shiny app from a ClustAssess object — starlng_write_app_clustassess","text":"","code":"starlng_write_app_clustassess(   folder_path,   expression_matrix,   clustassess_object,   metadata_df,   stable_feature_type,   stable_feature_set_size,   stable_clustering_method,   stable_n_clusters = NULL,   use_all_genes = TRUE,   app_title_name = \"\",   learn_graph_parameters = list(nodes_per_log10_cells = 30, learn_graph_controls =     list(eps = 1e-05, maxiter = 100)),   gene_filtering_function = function(info_gene_df) {      rownames(info_gene_df %>%     dplyr::filter(.data$morans_I > 0.1, .data$q_value < 0.05))  },   clustering_parameters = list(n_neighbours = seq(from = 5, to = 50, by = 5), graph_type     = \"snn\", prune_value = -1, resolutions = list(RBConfigurationVertexPartition =     seq(from = 0.1, to = 2, by = 0.1), RBERVertexPartition = NULL,     ModularityVertexPartition = NULL), number_iterations = 5, number_repetitions = 100),   ecc_threshold = 0.9,   freq_threshold = 30,   enrichment_organism = \"hsapiens\",   save_entire_monocle = TRUE,   discrete_colours = list(),   continuous_colours = list(),   max_n_colors = 40,   verbose = FALSE,   compression_level = 7,   chunk_size = 100,   nthreads = 1 )"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/starlng_write_app_clustassess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Starlng Shiny app from a ClustAssess object — starlng_write_app_clustassess","text":"folder_path Check starlng_write_app_monocle() documentation. expression_matrix normalized gene cell expression matrix. matrix rownames colnames defined. clustassess_object output automatic pipeline ClustAssess package. metadata_df data frame cell metadata specific experiment. NULL, function create one-group metadata name \"one_level\". stable_feature_type feature type chosen ClustAssess analysis. stable_feature_set_size size feature set chosen ClustAssess analysis. stable_clustering_method clustering method chosen ClustAssess analysis. stable_n_clusters number clusters chosen ClustAssess analysis. NULL, function use clusters obtained. Defaults NULL. use_all_genes TRUE, uses genes expression matrix. FALSE, uses stable feature set determined ClustAssess. Defaults TRUE. app_title_name Check starlng_write_app_monocle() documentation. learn_graph_parameters Check starlng_write_app_monocle() documentation. gene_filtering_function Check starlng_write_app_monocle() documentation. clustering_parameters Check starlng_write_app_monocle() documentation. ecc_threshold Check starlng_write_app_monocle() documentation. freq_threshold Check starlng_write_app_monocle() documentation. enrichment_organism Check starlng_write_app_monocle() documentation.` save_entire_monocle Check starlng_write_app_monocle() documentation. discrete_colours Check starlng_write_app_monocle() documentation. continuous_colours Check starlng_write_app_monocle() documentation. max_n_colors Check starlng_write_app_monocle() documentation. verbose Check starlng_write_app_monocle() documentation. compression_level Check starlng_write_app_monocle() documentation. chunk_size Check starlng_write_app_monocle() documentation. nthreads Check starlng_write_app_monocle() documentation.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/starlng_write_app_clustassess.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create Starlng Shiny app from a ClustAssess object — starlng_write_app_clustassess","text":"details parameters content shiny folder, consult documentation starlng_write_app_monocle() function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/starlng_write_app_clustassess_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Starlng Shiny app from a ClustAssess object — starlng_write_app_clustassess_app","title":"Create Starlng Shiny app from a ClustAssess object — starlng_write_app_clustassess_app","text":"Runs entire Starlng pipeline normalized gene expression matrix togheter content ClustAssess Shiny app generates folder necessary files run Shiny app.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/starlng_write_app_clustassess_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Starlng Shiny app from a ClustAssess object — starlng_write_app_clustassess_app","text":"","code":"starlng_write_app_clustassess_app(   folder_path,   ca_app_folder,   stable_feature_type,   stable_feature_set_size,   stable_clustering_method,   stable_n_clusters = NULL,   use_all_genes = TRUE,   app_title_name = \"\",   learn_graph_parameters = list(nodes_per_log10_cells = 30, learn_graph_controls =     list(eps = 1e-05, maxiter = 100)),   gene_filtering_function = function(info_gene_df) {      rownames(info_gene_df %>%     dplyr::filter(.data$morans_I > 0.1, .data$q_value < 0.05))  },   clustering_parameters = list(n_neighbours = seq(from = 5, to = 50, by = 5), graph_type     = \"snn\", prune_value = -1, resolutions = list(RBConfigurationVertexPartition =     seq(from = 0.1, to = 2, by = 0.1), RBERVertexPartition = NULL,     ModularityVertexPartition = NULL), number_iterations = 5, number_repetitions = 100),   ecc_threshold = 0.9,   freq_threshold = 30,   enrichment_organism = \"hsapiens\",   save_entire_monocle = TRUE,   discrete_colours = list(),   continuous_colours = list(),   max_n_colors = 40,   verbose = FALSE,   compression_level = 7,   chunk_size = 100,   nthreads = 1 )"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/starlng_write_app_clustassess_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Starlng Shiny app from a ClustAssess object — starlng_write_app_clustassess_app","text":"folder_path Check starlng_write_app_monocle() documentation. ca_app_folder path folder containing files associated ClustAssess Shiny app. stable_feature_type feature type chosen ClustAssess analysis. stable_feature_set_size size feature set chosen ClustAssess analysis. stable_clustering_method clustering method chosen ClustAssess analysis. stable_n_clusters number clusters chosen ClustAssess analysis. NULL, function use clusters obtained. Defaults NULL. use_all_genes TRUE, uses genes expression matrix. FALSE, uses stable feature set determined ClustAssess. Defaults TRUE. app_title_name Check starlng_write_app_monocle() documentation.` learn_graph_parameters Check starlng_write_app_monocle() documentation.` gene_filtering_function Check starlng_write_app_monocle() documentation.` clustering_parameters Check starlng_write_app_monocle() documentation.` ecc_threshold Check starlng_write_app_monocle() documentation.` freq_threshold Check starlng_write_app_monocle() documentation.` enrichment_organism Check starlng_write_app_monocle() documentation.` save_entire_monocle Check starlng_write_app_monocle() documentation.` discrete_colours Check starlng_write_app_monocle() documentation.` continuous_colours Check starlng_write_app_monocle() documentation.` max_n_colors Check starlng_write_app_monocle() documentation.` verbose Check starlng_write_app_monocle() documentation. compression_level Check starlng_write_app_monocle() documentation.` chunk_size Check starlng_write_app_monocle() documentation. nthreads Check starlng_write_app_monocle() documentation.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/starlng_write_app_clustassess_app.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create Starlng Shiny app from a ClustAssess object — starlng_write_app_clustassess_app","text":"details parameters content shiny folder, consult documentation starlng_write_app_monocle() function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/starlng_write_app_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Starlng Shiny app from a normalized gene expression matrix — starlng_write_app_default","title":"Create Starlng Shiny app from a normalized gene expression matrix — starlng_write_app_default","text":"Runs entire Starlng pipeline normalized gene expression matrix generates folder necessary files run Shiny app.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/starlng_write_app_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Starlng Shiny app from a normalized gene expression matrix — starlng_write_app_default","text":"","code":"starlng_write_app_default(   folder_path,   expression_matrix,   metadata_df = NULL,   pca_embedding = NULL,   umap_embedding = NULL,   app_title_name = \"\",   learn_graph_parameters = list(nodes_per_log10_cells = 30, learn_graph_controls =     list(eps = 1e-05, maxiter = 100)),   gene_filtering_function = function(info_gene_df) {      rownames(info_gene_df %>%     dplyr::filter(.data$morans_I > 0.1, .data$q_value < 0.05))  },   clustering_parameters = list(n_neighbours = seq(from = 5, to = 50, by = 5), graph_type     = \"snn\", prune_value = -1, resolutions = list(RBConfigurationVertexPartition =     seq(from = 0.1, to = 2, by = 0.1), RBERVertexPartition = NULL,     ModularityVertexPartition = NULL), number_iterations = 5, number_repetitions = 100),   ecc_threshold = 0.9,   freq_threshold = 30,   enrichment_organism = \"hsapiens\",   save_entire_monocle = TRUE,   discrete_colours = list(),   continuous_colours = list(),   max_n_colors = 40,   verbose = FALSE,   compression_level = 7,   chunk_size = 100,   nthreads = 1 )"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/starlng_write_app_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Starlng Shiny app from a normalized gene expression matrix — starlng_write_app_default","text":"folder_path Check starlng_write_app_monocle() documentation. expression_matrix normalized gene cell expression matrix. matrix rownames colnames defined. metadata_df data frame cell metadata specific experiment. NULL, function create one-group metadata name \"one_level\". pca_embedding matrix PCA embedding cells. NULL, function calculate PCA embedding creating monocle3 object. umap_embedding matrix UMAP embedding cells. NULL, function calculate UMAP embedding creating monocle3. app_title_name Check starlng_write_app_monocle() documentation. learn_graph_parameters Check starlng_write_app_monocle() documentation. gene_filtering_function Check starlng_write_app_monocle() documentation. clustering_parameters Check starlng_write_app_monocle() documentation. ecc_threshold Check starlng_write_app_monocle() documentation. freq_threshold Check starlng_write_app_monocle() documentation. enrichment_organism Check starlng_write_app_monocle() documentation. save_entire_monocle Check starlng_write_app_monocle() documentation. discrete_colours Check starlng_write_app_monocle() documentation. continuous_colours Check starlng_write_app_monocle() documentation. max_n_colors Check starlng_write_app_monocle() documentation. verbose Check starlng_write_app_monocle() documentation. compression_level Check starlng_write_app_monocle() documentation. chunk_size Check starlng_write_app_monocle() documentation. nthreads Check starlng_write_app_monocle() documentation.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/starlng_write_app_default.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create Starlng Shiny app from a normalized gene expression matrix — starlng_write_app_default","text":"details parameters content shiny folder, consult documentation starlng_write_app_monocle() function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/starlng_write_app_monocle.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Starlng Shiny app from Monocle object — starlng_write_app_monocle","title":"Create Starlng Shiny app from Monocle object — starlng_write_app_monocle","text":"Runs entire Starlng pipeline Monocle object generates folder necessary files run Shiny app.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/starlng_write_app_monocle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Starlng Shiny app from Monocle object — starlng_write_app_monocle","text":"","code":"starlng_write_app_monocle(   folder_path,   monocle_object,   app_title_name = \"\",   learn_graph_parameters = list(nodes_per_log10_cells = 30, learn_graph_controls =     list(eps = 1e-05, maxiter = 100)),   gene_filtering_function = function(info_gene_df) {      rownames(info_gene_df %>%     dplyr::filter(.data$morans_I > 0.1, .data$q_value < 0.05))  },   clustering_parameters = list(n_neighbours = seq(from = 5, to = 50, by = 5), graph_type     = \"snn\", prune_value = -1, resolutions = list(RBConfigurationVertexPartition =     seq(from = 0.1, to = 2, by = 0.1), RBERVertexPartition = NULL,     ModularityVertexPartition = NULL), number_iterations = 5, number_repetitions = 100),   ecc_threshold = 0.9,   freq_threshold = 30,   enrichment_organism = \"hsapiens\",   save_entire_monocle = TRUE,   discrete_colours = list(),   continuous_colours = list(),   max_n_colors = 40,   verbose = FALSE,   compression_level = 7,   chunk_size = 100,   nthreads = 1 )"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/starlng_write_app_monocle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Starlng Shiny app from Monocle object — starlng_write_app_monocle","text":"folder_path path folder app saved. monocle_object monocle3 object used starting point. app_title_name title shiny app. learn_graph_parameters list parameters passed custom_learn_graph function. Possible options: nodes_per_log10_cells - number nodes per log10 cells. used influence level detail inferred trajectory. learn_graph_controls - list parameters passed learn_graph function monocle3 package. parameters usually used influence convergence algorithm pruning resulting trajectory. gene_filtering_function function used filter genes used clustering analysis. function take one parameter, data frame. data frame contain following columns: morans_I - Moran's value gene. q_value - adjusted p-value gene spatially autocorrelated. average_expression - average expression gene. n_expressed_cells - number cells express gene. average_expression_nonzero - average expression gene cells express . percent_expressed_cells - percentage cells express gene. function return list gene names considered result filtering. clustering_parameters list parameters passed clustering_pipeline function. Consult documentation function details. ecc_threshold threshold applied Element-Centric Consistency (ECC) score determine number cluster stable . default, set 0.9. freq_threshold threshold applied number times number clusters obtained running clustering_pipeline function. default, set 30. enrichment_organism organism used enrichment analysis. save_entire_monocle TRUE, saves monocle object app folder. object used perform additional changes app continue downstream analysis. memory concern, set parameter FALSE. Defaults TRUE. discrete_colours list colours used colour groups discrete metadata. list consist association number groups colour palette. missing number groups, qualpalr package used. Defaults empty list. continuous_colours list colours used colour continuous metadata gene expression. list consist association name colour palette list colours. list following palettes automatically added: viridis, plasam, white-red blue-red. Defaults empty list. max_n_colors maximum number colours used discrete groups. Defaults 40. verbose TRUE, prints intermediate progress messages pipeline. Defaults FALSE. compression_level compression level used save expression matrix HDF5 format. Defaults 7. chunk_size chunk size used store expression matrix HDF5 format. recommended use values 10 1000, might improve speed reading rows file. Defaults 100. nthreads number threads used perform calculations. parameter automatically passed graph_test function calculate Moran's test. clustering pipeline, parallel backend already registered, function generate PSOCK cluster number threads specified. Defaults 1.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/starlng_write_app_monocle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Starlng Shiny app from Monocle object — starlng_write_app_monocle","text":"function return anything, creates folder contains necessary files run Starlng Shiny app. app.R - main file Shiny app. objects - folder contains following files: monocle_object.qs2 - monocle object used generate app. recommended_pseudotime.qs2 - recommended pseudotime values. genes_info.csv - table gene information. trajectory_ggplot.qs2 - ggplot object trajectory. metadata.qs2 - metadata object. diet_monocle_object.qs2 - monocle object diet information. expression.h5 - expression matrix HDF5 format. colours.qs2 - colours object.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/subset_monocle_by_trajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset the Monocle object by a trajectory — subset_monocle_by_trajectory","title":"Subset the Monocle object by a trajectory — subset_monocle_by_trajectory","text":"function subsets Monocle object based subgraph inferrred trajectory. subgraph defined using start end points, defined cells.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/subset_monocle_by_trajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset the Monocle object by a trajectory — subset_monocle_by_trajectory","text":"","code":"subset_monocle_by_trajectory(mon_obj, start_cells = NULL, end_cells = NULL)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/subset_monocle_by_trajectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset the Monocle object by a trajectory — subset_monocle_by_trajectory","text":"mon_obj monocle object. start_cells list cells names define start selected trajectory. NULL, subsetting performed. Defaults NULL. end_cells list cells names define end selected trajectory. NULL, subsetting performed. Defaults NULL.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/subset_monocle_by_trajectory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset the Monocle object by a trajectory — subset_monocle_by_trajectory","text":"Monocle object subsetted trajectory.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_gene_clustering.html","id":null,"dir":"Reference","previous_headings":"","what":"UI - Gene clustering — ui_gene_clustering","title":"UI - Gene clustering — ui_gene_clustering","text":"Creates UI interface Gene Clustering panel inside Starlng Shiny application.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_gene_clustering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UI - Gene clustering — ui_gene_clustering","text":"","code":"ui_gene_clustering(id)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_gene_clustering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UI - Gene clustering — ui_gene_clustering","text":"id id shiny module, used access UI elements.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_gene_clustering.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"UI - Gene clustering — ui_gene_clustering","text":"function shiny module function used context app created using starlng_write_app function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_gene_info_table.html","id":null,"dir":"Reference","previous_headings":"","what":"UI - Gene Info Table — ui_gene_info_table","title":"UI - Gene Info Table — ui_gene_info_table","text":"Creates UI interface Gene Info Tabel panel inside Starlng Shiny application.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_gene_info_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UI - Gene Info Table — ui_gene_info_table","text":"","code":"ui_gene_info_table(id)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_gene_info_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UI - Gene Info Table — ui_gene_info_table","text":"id id shiny module, used access UI elements.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_gene_info_table.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"UI - Gene Info Table — ui_gene_info_table","text":"function shiny module function used context app created using starlng_write_app function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_gene_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"UI - Gene UMAP — ui_gene_umap","title":"UI - Gene UMAP — ui_gene_umap","text":"Creates UI interface Gene UMAP panel inside Starlng Shiny application.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_gene_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UI - Gene UMAP — ui_gene_umap","text":"","code":"ui_gene_umap(id)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_gene_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UI - Gene UMAP — ui_gene_umap","text":"id id shiny module, used access UI elements.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_gene_umap.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"UI - Gene UMAP — ui_gene_umap","text":"function shiny module function used context app created using starlng_write_app function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_global_setttings.html","id":null,"dir":"Reference","previous_headings":"","what":"UI - Global Settings — ui_global_setttings","title":"UI - Global Settings — ui_global_setttings","text":"Creates UI elements global settings UI components inside Starlng Shiny application.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_global_setttings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UI - Global Settings — ui_global_setttings","text":"","code":"ui_global_setttings()"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_global_setttings.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"UI - Global Settings — ui_global_setttings","text":"function shiny module function used context app created using starlng_write_app function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_metadata_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"UI - Metadata UMAP — ui_metadata_umap","title":"UI - Metadata UMAP — ui_metadata_umap","text":"Creates UI interface Metadata UMAP panel inside Starlng Shiny application.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_metadata_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UI - Metadata UMAP — ui_metadata_umap","text":"","code":"ui_metadata_umap(id)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_metadata_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UI - Metadata UMAP — ui_metadata_umap","text":"id id shiny module, used access UI elements.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_metadata_umap.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"UI - Metadata UMAP — ui_metadata_umap","text":"function shiny module function used context app created using starlng_write_app function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_module_enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"UI - Module Enrichment — ui_module_enrichment","title":"UI - Module Enrichment — ui_module_enrichment","text":"Creates UI interface Module Enrichment panel inside Starlng Shiny application.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_module_enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UI - Module Enrichment — ui_module_enrichment","text":"","code":"ui_module_enrichment(id)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_module_enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UI - Module Enrichment — ui_module_enrichment","text":"id id shiny module, used access UI elements.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_module_enrichment.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"UI - Module Enrichment — ui_module_enrichment","text":"function shiny module function used context app created using starlng_write_app function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_module_metadata_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"UI - Gene Module Heatmap — ui_module_metadata_heatmap","title":"UI - Gene Module Heatmap — ui_module_metadata_heatmap","text":"Creates UI interface Gene Module Heatmap panel inside Starlng Shiny application.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_module_metadata_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UI - Gene Module Heatmap — ui_module_metadata_heatmap","text":"","code":"ui_module_metadata_heatmap(id)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_module_metadata_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UI - Gene Module Heatmap — ui_module_metadata_heatmap","text":"id id shiny module, used access UI elements.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_module_metadata_heatmap.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"UI - Gene Module Heatmap — ui_module_metadata_heatmap","text":"function shiny module function used context app created using starlng_write_app function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_module_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"UI - Gene Module UMAP — ui_module_umap","title":"UI - Gene Module UMAP — ui_module_umap","text":"Creates UI interface Gene Module UMAP panel inside Starlng Shiny application.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_module_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UI - Gene Module UMAP — ui_module_umap","text":"","code":"ui_module_umap(id)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_module_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UI - Gene Module UMAP — ui_module_umap","text":"id id shiny module, used access UI elements.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_module_umap.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"UI - Gene Module UMAP — ui_module_umap","text":"function shiny module function used context app created using starlng_write_app function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_pseudotime_select_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"UI - Pseudotime — ui_pseudotime_select_cells","title":"UI - Pseudotime — ui_pseudotime_select_cells","text":"Creates UI interface Pseudotime panel inside Starlng Shiny application.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_pseudotime_select_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UI - Pseudotime — ui_pseudotime_select_cells","text":"","code":"ui_pseudotime_select_cells(id)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_pseudotime_select_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UI - Pseudotime — ui_pseudotime_select_cells","text":"id id shiny module, used access UI elements.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/ui_pseudotime_select_cells.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"UI - Pseudotime — ui_pseudotime_select_cells","text":"function shiny module function used context app created using starlng_write_app function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/update_gears_width.html","id":null,"dir":"Reference","previous_headings":"","what":"Server - Gear Width — update_gears_width","title":"Server - Gear Width — update_gears_width","text":"Creates backend interface dynamically updates width gear settings window inside Starlng Shiny application.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/update_gears_width.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server - Gear Width — update_gears_width","text":"","code":"update_gears_width(session)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/update_gears_width.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server - Gear Width — update_gears_width","text":"session shiny session object used update UI elements.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/update_gears_width.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Server - Gear Width — update_gears_width","text":"function shiny module function used context app created using starlng_write_app function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/update_monocle_partition.html","id":null,"dir":"Reference","previous_headings":"","what":"Update the partition of the Monocle object — update_monocle_partition","title":"Update the partition of the Monocle object — update_monocle_partition","text":"function updates partition Monocle object, used tasks trajectory analysis.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/update_monocle_partition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update the partition of the Monocle object — update_monocle_partition","text":"","code":"update_monocle_partition(mon_obj, new_partition)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/update_monocle_partition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update the partition of the Monocle object — update_monocle_partition","text":"mon_obj Monocle object. new_partition new partition updated.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/update_monocle_partition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update the partition of the Monocle object — update_monocle_partition","text":"Monocle object updated partition.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/update_tabs.html","id":null,"dir":"Reference","previous_headings":"","what":"Server - Tabs update — update_tabs","title":"Server - Tabs update — update_tabs","text":"Creates backend interface dynamically shows gene module tabs inside Starlng Shiny application running gene clustering.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/update_tabs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server - Tabs update — update_tabs","text":"","code":"update_tabs(session)"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/update_tabs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server - Tabs update — update_tabs","text":"session shiny session object used update UI elements.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/update_tabs.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Server - Tabs update — update_tabs","text":"function shiny module function used context app created using starlng_write_app function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/voting_scheme.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene Expression voting scheme — voting_scheme","title":"Gene Expression voting scheme — voting_scheme","text":"function performs voting scheme identify cells expressing one multiple genes given threshold. function allows user introduce factor relaxation voting scheme setting minimum number genes coexpressed cell considered. obtained set cells, function summarizes expression values genes using user-defined function.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/voting_scheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene Expression voting scheme — voting_scheme","text":"","code":"voting_scheme(   expression_matrix,   genes,   thresh_percentile = 0.25,   thresh_value = 0,   n_coexpressed_thresh = length(genes),   summary_function = NULL )"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/voting_scheme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gene Expression voting scheme — voting_scheme","text":"expression_matrix gene cell expression matrix used. matrix defined rownames colnames. genes vector genes used voting scheme. thresh_percentile percentile used threshold expression values select cells associated gene. set 0, threshold value defined thresh_value. Defaults 0.25. thresh_value value used threshold expression values select cells associated gene. Defaults 0. n_coexpressed_thresh number genes coexpressed cell considered selected. Defaults number provided genes. summary_function function takes argument numeric vector summarises single value. set NULL, function return factor selected cells. Defaults NULL.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/voting_scheme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gene Expression voting scheme — voting_scheme","text":"list information cells selected voting scheme. summary function provided, list contain summary values cell.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/write_gene_matrix_dense_h5.html","id":null,"dir":"Reference","previous_headings":"","what":"Write expression matrix to a dense HDF5 file — write_gene_matrix_dense_h5","title":"Write expression matrix to a dense HDF5 file — write_gene_matrix_dense_h5","text":"function writes expression matrix HDF5 file dense format. created file contain three fields: genes: names genes matrix. cells: names cells matrix. expression_matrix: expression matrix","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/write_gene_matrix_dense_h5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write expression matrix to a dense HDF5 file — write_gene_matrix_dense_h5","text":"","code":"write_gene_matrix_dense_h5(   expression_matrix,   file_path,   compression_level = 7,   chunk_size = 100,   all_at_once = TRUE,   garbage_thresh = 2 )"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/write_gene_matrix_dense_h5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write expression matrix to a dense HDF5 file — write_gene_matrix_dense_h5","text":"expression_matrix expression matrix written. matrix defined rownames colnames. defined, generated gene_{index} cell_{index} respectively. file_path path HDF5 file matrix stored. compression_level compression level used. Defaults 7. chunk_size size chunks used. Defaults 100. all_at_once Logical indicating writing process done providing entire matrix writing chunks matrix. recommended write entire matrix , noticeable speedup observed case. Defaults TRUE. garbage_thresh threshold, measured GB, trigger garbage collection writing matrix chunks.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/write_gene_matrix_dense_h5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write expression matrix to a dense HDF5 file — write_gene_matrix_dense_h5","text":"function return anything. create HDF5 file matrix stored .","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/write_gene_matrix_sparse_h5.html","id":null,"dir":"Reference","previous_headings":"","what":"Write expression matrix to a sparse HDF5 file — write_gene_matrix_sparse_h5","title":"Write expression matrix to a sparse HDF5 file — write_gene_matrix_sparse_h5","text":"function writes expression matrix HDF5 file sparse CSC format. created file contain three fields: genes: names genes matrix. cells: names cells matrix. expression_matrix: expression matrix stored CSC format.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/write_gene_matrix_sparse_h5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write expression matrix to a sparse HDF5 file — write_gene_matrix_sparse_h5","text":"","code":"write_gene_matrix_sparse_h5(   expression_matrix,   file_path,   compression_level = 7 )"},{"path":"https://core-bioinformatics.github.io/Starlng/reference/write_gene_matrix_sparse_h5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write expression matrix to a sparse HDF5 file — write_gene_matrix_sparse_h5","text":"expression_matrix expression matrix written. matrix defined rownames colnames. defined, generated gene_{index} cell_{index} respectively. file_path path HDF5 file matrix stored. compression_level compression level used. Defaults 7.","code":""},{"path":"https://core-bioinformatics.github.io/Starlng/reference/write_gene_matrix_sparse_h5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write expression matrix to a sparse HDF5 file — write_gene_matrix_sparse_h5","text":"function return anything. create HDF5 file matrix stored .","code":""}]
